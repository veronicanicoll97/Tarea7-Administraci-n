generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["restaurante"]
}

model clientes {
  idCliente Int        @id(map: "clientes_pk") @default(autoincrement()) @map("id_cliente")
  cedula     String     @unique(map: "cedula_uk") @db.VarChar
  nombres    String     @db.VarChar
  apellidos  String     @db.VarChar
  reservas   reservas[]

  @@schema("restaurante")
}

model mesas {
  id_mesa          Int                         @id(map: "mesas_pk") @default(autoincrement())
  nombre_mesa      String                      @db.VarChar
  posicion_x       Float                       @db.Real
  posicion_y       Int
  capacidad_x_mesa Int
  estado           Unsupported("estado_mesa")? @default(dbgenerated("'DISPONIBLE'::estado_mesa"))
  reservas         reservas[]

  @@schema("restaurante")
}

model reservas {
  id_reserva          Int          @id(map: "reservas_pk") @default(autoincrement())
  fecha_reserva       DateTime     @db.Date
  hora_inicio_reserva DateTime     @db.Time(6)
  hora_fin_reserva    DateTime     @db.Time(6)
  cantidad_mesa       Int
  id_restaurante      Int
  id_cliente          Int
  id_mesa             Int
  clientes            clientes     @relation(fields: [id_cliente], references: [idCliente], onDelete: NoAction, onUpdate: NoAction, map: "clientes_reservas_fk")
  mesas               mesas        @relation(fields: [id_mesa], references: [id_mesa], onDelete: NoAction, onUpdate: NoAction, map: "mesas_reservas_fk")
  restaurantes        restaurantes @relation(fields: [id_restaurante], references: [idRestaurante], onDelete: NoAction, onUpdate: NoAction, map: "restaurantes_reservas_fk")

  @@schema("restaurante")
}

model restaurantes {
  idRestaurante Int        @id(map: "restaurantes_pk") @default(autoincrement()) @map("id_restaurante")
  nombre        String     @db.VarChar
  direccion     String     @db.VarChar
  reservas      reservas[]

  @@schema("restaurante")
}
